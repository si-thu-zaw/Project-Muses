#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PMDB")]
public partial class PMDBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCategory(Category instance);
  partial void UpdateCategory(Category instance);
  partial void DeleteCategory(Category instance);
  partial void InsertUser_Type(User_Type instance);
  partial void UpdateUser_Type(User_Type instance);
  partial void DeleteUser_Type(User_Type instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertVideo(Video instance);
  partial void UpdateVideo(Video instance);
  partial void DeleteVideo(Video instance);
  partial void InsertView(View instance);
  partial void UpdateView(View instance);
  partial void DeleteView(View instance);
  partial void InsertLike(Like instance);
  partial void UpdateLike(Like instance);
  partial void DeleteLike(Like instance);
  partial void InsertComment(Comment instance);
  partial void UpdateComment(Comment instance);
  partial void DeleteComment(Comment instance);
  #endregion
	
	public PMDBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PMDBConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public PMDBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PMDBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PMDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PMDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Category> Categories
	{
		get
		{
			return this.GetTable<Category>();
		}
	}
	
	public System.Data.Linq.Table<User_Type> User_Types
	{
		get
		{
			return this.GetTable<User_Type>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<Video> Videos
	{
		get
		{
			return this.GetTable<Video>();
		}
	}
	
	public System.Data.Linq.Table<View> Views
	{
		get
		{
			return this.GetTable<View>();
		}
	}
	
	public System.Data.Linq.Table<Like> Likes
	{
		get
		{
			return this.GetTable<Like>();
		}
	}
	
	public System.Data.Linq.Table<Comment> Comments
	{
		get
		{
			return this.GetTable<Comment>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insert_User")]
	public ISingleResult<Insert_UserResult> Insert_User([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(50)")] string email)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, email);
		return ((ISingleResult<Insert_UserResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Validate_User1")]
	public ISingleResult<Validate_User1Result> Validate_User1([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(50)")] string password)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password);
		return ((ISingleResult<Validate_User1Result>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveVideo")]
	public int SaveVideo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(500)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Video", DbType="NVarChar(100)")] string video, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> category, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, description, video, category, date, user);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRole")]
	public ISingleResult<GetRoleResult> GetRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		return ((ISingleResult<GetRoleResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVideoOwner")]
	public ISingleResult<GetVideoOwnerResult> GetVideoOwner([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		return ((ISingleResult<GetVideoOwnerResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddView")]
	public int AddView([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> video, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), video, user);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddComment")]
	public int AddComment([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> video, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string comment)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), video, user, comment);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCommentOwner")]
	public ISingleResult<GetCommentOwnerResult> GetCommentOwner([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
		return ((ISingleResult<GetCommentOwnerResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _C_ID;
	
	private string _C_Name;
	
	private string _C_Desc;
	
	private EntitySet<Video> _Videos;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_IDChanging(int value);
    partial void OnC_IDChanged();
    partial void OnC_NameChanging(string value);
    partial void OnC_NameChanged();
    partial void OnC_DescChanging(string value);
    partial void OnC_DescChanged();
    #endregion
	
	public Category()
	{
		this._Videos = new EntitySet<Video>(new Action<Video>(this.attach_Videos), new Action<Video>(this.detach_Videos));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int C_ID
	{
		get
		{
			return this._C_ID;
		}
		set
		{
			if ((this._C_ID != value))
			{
				this.OnC_IDChanging(value);
				this.SendPropertyChanging();
				this._C_ID = value;
				this.SendPropertyChanged("C_ID");
				this.OnC_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string C_Name
	{
		get
		{
			return this._C_Name;
		}
		set
		{
			if ((this._C_Name != value))
			{
				this.OnC_NameChanging(value);
				this.SendPropertyChanging();
				this._C_Name = value;
				this.SendPropertyChanged("C_Name");
				this.OnC_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Desc", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string C_Desc
	{
		get
		{
			return this._C_Desc;
		}
		set
		{
			if ((this._C_Desc != value))
			{
				this.OnC_DescChanging(value);
				this.SendPropertyChanging();
				this._C_Desc = value;
				this.SendPropertyChanged("C_Desc");
				this.OnC_DescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Video", Storage="_Videos", ThisKey="C_ID", OtherKey="V_Cat")]
	public EntitySet<Video> Videos
	{
		get
		{
			return this._Videos;
		}
		set
		{
			this._Videos.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Videos(Video entity)
	{
		this.SendPropertyChanging();
		entity.Category = this;
	}
	
	private void detach_Videos(Video entity)
	{
		this.SendPropertyChanging();
		entity.Category = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Type")]
public partial class User_Type : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _T_ID;
	
	private string _T_Name;
	
	private EntitySet<User> _Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnT_IDChanging(int value);
    partial void OnT_IDChanged();
    partial void OnT_NameChanging(string value);
    partial void OnT_NameChanged();
    #endregion
	
	public User_Type()
	{
		this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int T_ID
	{
		get
		{
			return this._T_ID;
		}
		set
		{
			if ((this._T_ID != value))
			{
				this.OnT_IDChanging(value);
				this.SendPropertyChanging();
				this._T_ID = value;
				this.SendPropertyChanged("T_ID");
				this.OnT_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string T_Name
	{
		get
		{
			return this._T_Name;
		}
		set
		{
			if ((this._T_Name != value))
			{
				this.OnT_NameChanging(value);
				this.SendPropertyChanging();
				this._T_Name = value;
				this.SendPropertyChanged("T_Name");
				this.OnT_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Type_User", Storage="_Users", ThisKey="T_ID", OtherKey="U_Type")]
	public EntitySet<User> Users
	{
		get
		{
			return this._Users;
		}
		set
		{
			this._Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.User_Type = this;
	}
	
	private void detach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.User_Type = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _U_ID;
	
	private string _U_Name;
	
	private System.DateTime _U_Join;
	
	private string _U_Password;
	
	private string _U_Email;
	
	private int _U_Type;
	
	private System.Nullable<System.DateTime> _U_LastLogin;
	
	private EntitySet<Video> _Videos;
	
	private EntitySet<View> _Views;
	
	private EntitySet<Like> _Likes;
	
	private EntitySet<Comment> _Comments;
	
	private EntityRef<User_Type> _User_Type;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnU_IDChanging(int value);
    partial void OnU_IDChanged();
    partial void OnU_NameChanging(string value);
    partial void OnU_NameChanged();
    partial void OnU_JoinChanging(System.DateTime value);
    partial void OnU_JoinChanged();
    partial void OnU_PasswordChanging(string value);
    partial void OnU_PasswordChanged();
    partial void OnU_EmailChanging(string value);
    partial void OnU_EmailChanged();
    partial void OnU_TypeChanging(int value);
    partial void OnU_TypeChanged();
    partial void OnU_LastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnU_LastLoginChanged();
    #endregion
	
	public User()
	{
		this._Videos = new EntitySet<Video>(new Action<Video>(this.attach_Videos), new Action<Video>(this.detach_Videos));
		this._Views = new EntitySet<View>(new Action<View>(this.attach_Views), new Action<View>(this.detach_Views));
		this._Likes = new EntitySet<Like>(new Action<Like>(this.attach_Likes), new Action<Like>(this.detach_Likes));
		this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
		this._User_Type = default(EntityRef<User_Type>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int U_ID
	{
		get
		{
			return this._U_ID;
		}
		set
		{
			if ((this._U_ID != value))
			{
				this.OnU_IDChanging(value);
				this.SendPropertyChanging();
				this._U_ID = value;
				this.SendPropertyChanged("U_ID");
				this.OnU_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string U_Name
	{
		get
		{
			return this._U_Name;
		}
		set
		{
			if ((this._U_Name != value))
			{
				this.OnU_NameChanging(value);
				this.SendPropertyChanging();
				this._U_Name = value;
				this.SendPropertyChanged("U_Name");
				this.OnU_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Join", DbType="DateTime NOT NULL")]
	public System.DateTime U_Join
	{
		get
		{
			return this._U_Join;
		}
		set
		{
			if ((this._U_Join != value))
			{
				this.OnU_JoinChanging(value);
				this.SendPropertyChanging();
				this._U_Join = value;
				this.SendPropertyChanged("U_Join");
				this.OnU_JoinChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string U_Password
	{
		get
		{
			return this._U_Password;
		}
		set
		{
			if ((this._U_Password != value))
			{
				this.OnU_PasswordChanging(value);
				this.SendPropertyChanging();
				this._U_Password = value;
				this.SendPropertyChanged("U_Password");
				this.OnU_PasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string U_Email
	{
		get
		{
			return this._U_Email;
		}
		set
		{
			if ((this._U_Email != value))
			{
				this.OnU_EmailChanging(value);
				this.SendPropertyChanging();
				this._U_Email = value;
				this.SendPropertyChanged("U_Email");
				this.OnU_EmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Type", DbType="Int NOT NULL")]
	public int U_Type
	{
		get
		{
			return this._U_Type;
		}
		set
		{
			if ((this._U_Type != value))
			{
				if (this._User_Type.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnU_TypeChanging(value);
				this.SendPropertyChanging();
				this._U_Type = value;
				this.SendPropertyChanged("U_Type");
				this.OnU_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_LastLogin", DbType="DateTime")]
	public System.Nullable<System.DateTime> U_LastLogin
	{
		get
		{
			return this._U_LastLogin;
		}
		set
		{
			if ((this._U_LastLogin != value))
			{
				this.OnU_LastLoginChanging(value);
				this.SendPropertyChanging();
				this._U_LastLogin = value;
				this.SendPropertyChanged("U_LastLogin");
				this.OnU_LastLoginChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Video", Storage="_Videos", ThisKey="U_ID", OtherKey="V_User")]
	public EntitySet<Video> Videos
	{
		get
		{
			return this._Videos;
		}
		set
		{
			this._Videos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_View", Storage="_Views", ThisKey="U_ID", OtherKey="Vi_User")]
	public EntitySet<View> Views
	{
		get
		{
			return this._Views;
		}
		set
		{
			this._Views.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Like", Storage="_Likes", ThisKey="U_ID", OtherKey="L_User")]
	public EntitySet<Like> Likes
	{
		get
		{
			return this._Likes;
		}
		set
		{
			this._Likes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="U_ID", OtherKey="CM_User")]
	public EntitySet<Comment> Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			this._Comments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Type_User", Storage="_User_Type", ThisKey="U_Type", OtherKey="T_ID", IsForeignKey=true)]
	public User_Type User_Type
	{
		get
		{
			return this._User_Type.Entity;
		}
		set
		{
			User_Type previousValue = this._User_Type.Entity;
			if (((previousValue != value) 
						|| (this._User_Type.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User_Type.Entity = null;
					previousValue.Users.Remove(this);
				}
				this._User_Type.Entity = value;
				if ((value != null))
				{
					value.Users.Add(this);
					this._U_Type = value.T_ID;
				}
				else
				{
					this._U_Type = default(int);
				}
				this.SendPropertyChanged("User_Type");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Videos(Video entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Videos(Video entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Views(View entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Views(View entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Likes(Like entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Likes(Like entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Comments(Comment entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Comments(Comment entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video")]
public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _V_ID;
	
	private string _V_Name;
	
	private string _V_Desc;
	
	private System.DateTime _V_Date;
	
	private string _V_Link;
	
	private int _V_Cat;
	
	private int _V_User;
	
	private EntitySet<View> _Views;
	
	private EntitySet<Like> _Likes;
	
	private EntitySet<Comment> _Comments;
	
	private EntityRef<Category> _Category;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnV_IDChanging(int value);
    partial void OnV_IDChanged();
    partial void OnV_NameChanging(string value);
    partial void OnV_NameChanged();
    partial void OnV_DescChanging(string value);
    partial void OnV_DescChanged();
    partial void OnV_DateChanging(System.DateTime value);
    partial void OnV_DateChanged();
    partial void OnV_LinkChanging(string value);
    partial void OnV_LinkChanged();
    partial void OnV_CatChanging(int value);
    partial void OnV_CatChanged();
    partial void OnV_UserChanging(int value);
    partial void OnV_UserChanged();
    #endregion
	
	public Video()
	{
		this._Views = new EntitySet<View>(new Action<View>(this.attach_Views), new Action<View>(this.detach_Views));
		this._Likes = new EntitySet<Like>(new Action<Like>(this.attach_Likes), new Action<Like>(this.detach_Likes));
		this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
		this._Category = default(EntityRef<Category>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int V_ID
	{
		get
		{
			return this._V_ID;
		}
		set
		{
			if ((this._V_ID != value))
			{
				this.OnV_IDChanging(value);
				this.SendPropertyChanging();
				this._V_ID = value;
				this.SendPropertyChanged("V_ID");
				this.OnV_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string V_Name
	{
		get
		{
			return this._V_Name;
		}
		set
		{
			if ((this._V_Name != value))
			{
				this.OnV_NameChanging(value);
				this.SendPropertyChanging();
				this._V_Name = value;
				this.SendPropertyChanged("V_Name");
				this.OnV_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_Desc", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string V_Desc
	{
		get
		{
			return this._V_Desc;
		}
		set
		{
			if ((this._V_Desc != value))
			{
				this.OnV_DescChanging(value);
				this.SendPropertyChanging();
				this._V_Desc = value;
				this.SendPropertyChanged("V_Desc");
				this.OnV_DescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_Date", DbType="DateTime NOT NULL")]
	public System.DateTime V_Date
	{
		get
		{
			return this._V_Date;
		}
		set
		{
			if ((this._V_Date != value))
			{
				this.OnV_DateChanging(value);
				this.SendPropertyChanging();
				this._V_Date = value;
				this.SendPropertyChanged("V_Date");
				this.OnV_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_Link", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string V_Link
	{
		get
		{
			return this._V_Link;
		}
		set
		{
			if ((this._V_Link != value))
			{
				this.OnV_LinkChanging(value);
				this.SendPropertyChanging();
				this._V_Link = value;
				this.SendPropertyChanged("V_Link");
				this.OnV_LinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_Cat", DbType="Int NOT NULL")]
	public int V_Cat
	{
		get
		{
			return this._V_Cat;
		}
		set
		{
			if ((this._V_Cat != value))
			{
				if (this._Category.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnV_CatChanging(value);
				this.SendPropertyChanging();
				this._V_Cat = value;
				this.SendPropertyChanged("V_Cat");
				this.OnV_CatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_User", DbType="Int NOT NULL")]
	public int V_User
	{
		get
		{
			return this._V_User;
		}
		set
		{
			if ((this._V_User != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnV_UserChanging(value);
				this.SendPropertyChanging();
				this._V_User = value;
				this.SendPropertyChanged("V_User");
				this.OnV_UserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_View", Storage="_Views", ThisKey="V_ID", OtherKey="Vi_Video")]
	public EntitySet<View> Views
	{
		get
		{
			return this._Views;
		}
		set
		{
			this._Views.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_Like", Storage="_Likes", ThisKey="V_ID", OtherKey="L_Video")]
	public EntitySet<Like> Likes
	{
		get
		{
			return this._Likes;
		}
		set
		{
			this._Likes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_Comment", Storage="_Comments", ThisKey="V_ID", OtherKey="CM_Video")]
	public EntitySet<Comment> Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			this._Comments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Video", Storage="_Category", ThisKey="V_Cat", OtherKey="C_ID", IsForeignKey=true)]
	public Category Category
	{
		get
		{
			return this._Category.Entity;
		}
		set
		{
			Category previousValue = this._Category.Entity;
			if (((previousValue != value) 
						|| (this._Category.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Category.Entity = null;
					previousValue.Videos.Remove(this);
				}
				this._Category.Entity = value;
				if ((value != null))
				{
					value.Videos.Add(this);
					this._V_Cat = value.C_ID;
				}
				else
				{
					this._V_Cat = default(int);
				}
				this.SendPropertyChanged("Category");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Video", Storage="_User", ThisKey="V_User", OtherKey="U_ID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Videos.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Videos.Add(this);
					this._V_User = value.U_ID;
				}
				else
				{
					this._V_User = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Views(View entity)
	{
		this.SendPropertyChanging();
		entity.Video = this;
	}
	
	private void detach_Views(View entity)
	{
		this.SendPropertyChanging();
		entity.Video = null;
	}
	
	private void attach_Likes(Like entity)
	{
		this.SendPropertyChanging();
		entity.Video = this;
	}
	
	private void detach_Likes(Like entity)
	{
		this.SendPropertyChanging();
		entity.Video = null;
	}
	
	private void attach_Comments(Comment entity)
	{
		this.SendPropertyChanging();
		entity.Video = this;
	}
	
	private void detach_Comments(Comment entity)
	{
		this.SendPropertyChanging();
		entity.Video = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[View]")]
public partial class View : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Vi_ID;
	
	private int _Vi_Video;
	
	private int _Vi_User;
	
	private System.DateTime _Vi_Date;
	
	private EntityRef<Video> _Video;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVi_IDChanging(int value);
    partial void OnVi_IDChanged();
    partial void OnVi_VideoChanging(int value);
    partial void OnVi_VideoChanged();
    partial void OnVi_UserChanging(int value);
    partial void OnVi_UserChanged();
    partial void OnVi_DateChanging(System.DateTime value);
    partial void OnVi_DateChanged();
    #endregion
	
	public View()
	{
		this._Video = default(EntityRef<Video>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vi_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Vi_ID
	{
		get
		{
			return this._Vi_ID;
		}
		set
		{
			if ((this._Vi_ID != value))
			{
				this.OnVi_IDChanging(value);
				this.SendPropertyChanging();
				this._Vi_ID = value;
				this.SendPropertyChanged("Vi_ID");
				this.OnVi_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vi_Video", DbType="Int NOT NULL")]
	public int Vi_Video
	{
		get
		{
			return this._Vi_Video;
		}
		set
		{
			if ((this._Vi_Video != value))
			{
				if (this._Video.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVi_VideoChanging(value);
				this.SendPropertyChanging();
				this._Vi_Video = value;
				this.SendPropertyChanged("Vi_Video");
				this.OnVi_VideoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vi_User", DbType="Int NOT NULL")]
	public int Vi_User
	{
		get
		{
			return this._Vi_User;
		}
		set
		{
			if ((this._Vi_User != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVi_UserChanging(value);
				this.SendPropertyChanging();
				this._Vi_User = value;
				this.SendPropertyChanged("Vi_User");
				this.OnVi_UserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vi_Date", DbType="DateTime NOT NULL")]
	public System.DateTime Vi_Date
	{
		get
		{
			return this._Vi_Date;
		}
		set
		{
			if ((this._Vi_Date != value))
			{
				this.OnVi_DateChanging(value);
				this.SendPropertyChanging();
				this._Vi_Date = value;
				this.SendPropertyChanged("Vi_Date");
				this.OnVi_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_View", Storage="_Video", ThisKey="Vi_Video", OtherKey="V_ID", IsForeignKey=true)]
	public Video Video
	{
		get
		{
			return this._Video.Entity;
		}
		set
		{
			Video previousValue = this._Video.Entity;
			if (((previousValue != value) 
						|| (this._Video.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Video.Entity = null;
					previousValue.Views.Remove(this);
				}
				this._Video.Entity = value;
				if ((value != null))
				{
					value.Views.Add(this);
					this._Vi_Video = value.V_ID;
				}
				else
				{
					this._Vi_Video = default(int);
				}
				this.SendPropertyChanged("Video");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_View", Storage="_User", ThisKey="Vi_User", OtherKey="U_ID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Views.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Views.Add(this);
					this._Vi_User = value.U_ID;
				}
				else
				{
					this._Vi_User = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Like]")]
public partial class Like : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _L_ID;
	
	private int _L_Video;
	
	private int _L_User;
	
	private EntityRef<Video> _Video;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnL_IDChanging(int value);
    partial void OnL_IDChanged();
    partial void OnL_VideoChanging(int value);
    partial void OnL_VideoChanged();
    partial void OnL_UserChanging(int value);
    partial void OnL_UserChanged();
    #endregion
	
	public Like()
	{
		this._Video = default(EntityRef<Video>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int L_ID
	{
		get
		{
			return this._L_ID;
		}
		set
		{
			if ((this._L_ID != value))
			{
				this.OnL_IDChanging(value);
				this.SendPropertyChanging();
				this._L_ID = value;
				this.SendPropertyChanged("L_ID");
				this.OnL_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_Video", DbType="Int NOT NULL")]
	public int L_Video
	{
		get
		{
			return this._L_Video;
		}
		set
		{
			if ((this._L_Video != value))
			{
				if (this._Video.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnL_VideoChanging(value);
				this.SendPropertyChanging();
				this._L_Video = value;
				this.SendPropertyChanged("L_Video");
				this.OnL_VideoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_User", DbType="Int NOT NULL")]
	public int L_User
	{
		get
		{
			return this._L_User;
		}
		set
		{
			if ((this._L_User != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnL_UserChanging(value);
				this.SendPropertyChanging();
				this._L_User = value;
				this.SendPropertyChanged("L_User");
				this.OnL_UserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_Like", Storage="_Video", ThisKey="L_Video", OtherKey="V_ID", IsForeignKey=true)]
	public Video Video
	{
		get
		{
			return this._Video.Entity;
		}
		set
		{
			Video previousValue = this._Video.Entity;
			if (((previousValue != value) 
						|| (this._Video.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Video.Entity = null;
					previousValue.Likes.Remove(this);
				}
				this._Video.Entity = value;
				if ((value != null))
				{
					value.Likes.Add(this);
					this._L_Video = value.V_ID;
				}
				else
				{
					this._L_Video = default(int);
				}
				this.SendPropertyChanged("Video");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Like", Storage="_User", ThisKey="L_User", OtherKey="U_ID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Likes.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Likes.Add(this);
					this._L_User = value.U_ID;
				}
				else
				{
					this._L_User = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CM_ID;
	
	private int _CM_User;
	
	private int _CM_Video;
	
	private string _CM_Comment;
	
	private System.Nullable<System.DateTime> _CM_Date;
	
	private EntityRef<User> _User;
	
	private EntityRef<Video> _Video;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCM_IDChanging(int value);
    partial void OnCM_IDChanged();
    partial void OnCM_UserChanging(int value);
    partial void OnCM_UserChanged();
    partial void OnCM_VideoChanging(int value);
    partial void OnCM_VideoChanged();
    partial void OnCM_CommentChanging(string value);
    partial void OnCM_CommentChanged();
    partial void OnCM_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCM_DateChanged();
    #endregion
	
	public Comment()
	{
		this._User = default(EntityRef<User>);
		this._Video = default(EntityRef<Video>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CM_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CM_ID
	{
		get
		{
			return this._CM_ID;
		}
		set
		{
			if ((this._CM_ID != value))
			{
				this.OnCM_IDChanging(value);
				this.SendPropertyChanging();
				this._CM_ID = value;
				this.SendPropertyChanged("CM_ID");
				this.OnCM_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CM_User", DbType="Int NOT NULL")]
	public int CM_User
	{
		get
		{
			return this._CM_User;
		}
		set
		{
			if ((this._CM_User != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCM_UserChanging(value);
				this.SendPropertyChanging();
				this._CM_User = value;
				this.SendPropertyChanged("CM_User");
				this.OnCM_UserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CM_Video", DbType="Int NOT NULL")]
	public int CM_Video
	{
		get
		{
			return this._CM_Video;
		}
		set
		{
			if ((this._CM_Video != value))
			{
				if (this._Video.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCM_VideoChanging(value);
				this.SendPropertyChanging();
				this._CM_Video = value;
				this.SendPropertyChanged("CM_Video");
				this.OnCM_VideoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CM_Comment", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string CM_Comment
	{
		get
		{
			return this._CM_Comment;
		}
		set
		{
			if ((this._CM_Comment != value))
			{
				this.OnCM_CommentChanging(value);
				this.SendPropertyChanging();
				this._CM_Comment = value;
				this.SendPropertyChanged("CM_Comment");
				this.OnCM_CommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CM_Date", DbType="Date")]
	public System.Nullable<System.DateTime> CM_Date
	{
		get
		{
			return this._CM_Date;
		}
		set
		{
			if ((this._CM_Date != value))
			{
				this.OnCM_DateChanging(value);
				this.SendPropertyChanging();
				this._CM_Date = value;
				this.SendPropertyChanged("CM_Date");
				this.OnCM_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="CM_User", OtherKey="U_ID", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Comments.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Comments.Add(this);
					this._CM_User = value.U_ID;
				}
				else
				{
					this._CM_User = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Video_Comment", Storage="_Video", ThisKey="CM_Video", OtherKey="V_ID", IsForeignKey=true)]
	public Video Video
	{
		get
		{
			return this._Video.Entity;
		}
		set
		{
			Video previousValue = this._Video.Entity;
			if (((previousValue != value) 
						|| (this._Video.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Video.Entity = null;
					previousValue.Comments.Remove(this);
				}
				this._Video.Entity = value;
				if ((value != null))
				{
					value.Comments.Add(this);
					this._CM_Video = value.V_ID;
				}
				else
				{
					this._CM_Video = default(int);
				}
				this.SendPropertyChanged("Video");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class Insert_UserResult
{
	
	private int _Column1;
	
	public Insert_UserResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class Validate_User1Result
{
	
	private System.Nullable<int> _U_ID;
	
	public Validate_User1Result()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_ID", DbType="Int")]
	public System.Nullable<int> U_ID
	{
		get
		{
			return this._U_ID;
		}
		set
		{
			if ((this._U_ID != value))
			{
				this._U_ID = value;
			}
		}
	}
}

public partial class GetRoleResult
{
	
	private int _U_Type;
	
	public GetRoleResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Type", DbType="Int NOT NULL")]
	public int U_Type
	{
		get
		{
			return this._U_Type;
		}
		set
		{
			if ((this._U_Type != value))
			{
				this._U_Type = value;
			}
		}
	}
}

public partial class GetVideoOwnerResult
{
	
	private int _V_User;
	
	public GetVideoOwnerResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_User", DbType="Int NOT NULL")]
	public int V_User
	{
		get
		{
			return this._V_User;
		}
		set
		{
			if ((this._V_User != value))
			{
				this._V_User = value;
			}
		}
	}
}

public partial class GetCommentOwnerResult
{
	
	private int _CM_User;
	
	public GetCommentOwnerResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CM_User", DbType="Int NOT NULL")]
	public int CM_User
	{
		get
		{
			return this._CM_User;
		}
		set
		{
			if ((this._CM_User != value))
			{
				this._CM_User = value;
			}
		}
	}
}
#pragma warning restore 1591
